parameters:
    env(smtp_host): "localhost"
    env(smtp_port): "1025"
    env(smtp_user): ""
    env(smtp_password): ""
    env(smtp_encryption): "tls"
    env(smtp_sender): "support@frontastic.io"
    env(session_cookie_lifetime): "0"

imports:
    - { resource: security.yml }
    - { resource: doctrine.yml }

services:
    Frontastic\Catwalk\FrontendBundle\Session\FrontasticSessionHandler:
        autowire: true
        arguments:
            $writeThresholdInSeconds: "%session.metadata.update_threshold%"

framework:
    secret:          "%env(secret)%"
    router:
        resource: "%kernel.project_dir%/config/routing.yml"
        strict_requirements: ~
    form:            ~
    csrf_protection: ~
    validation:      { enable_annotations: false }
    serializer:      { enable_annotations: false }
    default_locale:  "%env(locale)%"
    trusted_hosts:   ~
    session:
        handler_id: Frontastic\Catwalk\FrontendBundle\Session\FrontasticSessionHandler
        name: 'FCSESSID0815'
        gc_maxlifetime: 1209600
        gc_probability: 0
        metadata_update_threshold: 3600
        cookie_samesite: none
        cookie_lifetime: "%env(session_cookie_lifetime)%"
    fragments:       ~
    http_method_override: true
    assets: ~

twig:
    debug:            "%kernel.debug%"
    strict_variables: "%kernel.debug%"
    exception_controller: Frontastic\Catwalk\FrontendBundle\Controller\ErrorController::errorAction
    paths:
        "%kernel.project_dir%/templates/": FrontasticCatwalkFrontendBundle
        "%frontastic.paas_catwalk_dir%/src/php/FrontendBundle/Resources/views/": FrontasticCatwalkFrontendBundle
        "%kernel.project_dir%/templates/Tastic/": Tastic
        "%frontastic.paas_catwalk_dir%/src/php/TwigTasticBundle/Resources/views/": Tastic

swiftmailer:
  # url:        "%env(mailer_url)%"
    host:       "%env(smtp_host)%"
    port:       "%env(smtp_port)%"
    username:   "%env(smtp_user)%"
    password:   "%env(smtp_password)%"
    encryption: "%env(smtp_encryption)%"
    spool: { type: memory }

sensio_framework_extra:
    router:
        annotations: false
    view:
        annotations: false
    request:
        converters: true
        auto_convert: true

monolog:
    handlers:
        # Debug messages occassionally contain huge amounts of data (e.g.
        # contentful adds the full response). We therefore don't log them at
        # all in production. Debug messages (in error cases) can temporarily be
        # re-enabled by commenting the following handler and deploying that.
        filter_out_debug_in_production:
            type: filter
            min_level: info
            handler: filter_for_errors

        filter_for_errors:
            type: fingers_crossed
            # if *one* log is error or higher, pass *all* to the handlers
            action_level: error
            # always pass info and above to the handlers
            passthru_level: info
            handler: handler_group

        # For now, we log both into JSON as well as plain text file.
        # Whatfailuregroup forwards records to multiple handlers suppressing failures of each handler
        # and continuing through to give every handler a chance to succeed.
        handler_group:
            type:                whatfailuregroup
            members:
                - json_file
                - plaintext_file

        plaintext_file:
            type: stream
            path: "%kernel.logs_dir%/frontend.log"

        json_file:
            type:                stream
            path:                /var/log/frontastic/json.log # This global path was agreed upon with Frontastic Ops.
            formatter:           Frontastic\Catwalk\ApiCoreBundle\Monolog\JsonFormatter

doctrine:
    orm:
        filters:
            undeleted:
                class: "Frontastic\\Catwalk\\ApiCoreBundle\\Doctrine\\UndeletedFilter"
                enabled: true
