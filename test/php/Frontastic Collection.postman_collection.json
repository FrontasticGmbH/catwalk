{
	"info": {
		"_postman_id": "8b33f1f4-4a8e-4548-bca7-f6973e8187ab",
		"name": "Frontastic Collection",
		"schema": "https://schema.getpostman.com/json/collection/v2.1.0/collection.json"
	},
	"item": [
		{
			"name": "productSearch",
			"event": [
				{
					"listen": "prerequest",
					"script": {
						"exec": [
							"let sharedSecret = pm.variables.get(\"sharedSecret\");",
							"const nonce = _.random(0, 1000);",
							"const message = nonce + ':' + pm.request.body.raw;",
							"const hash = CryptoJS.HmacSHA256(message, sharedSecret).toString(CryptoJS.digest);",
							"pm.collectionVariables.set('X-Frontastic-Nonce', nonce);",
							"pm.collectionVariables.set('X-Frontastic-Hash', hash);"
						],
						"type": "text/javascript"
					}
				}
			],
			"protocolProfileBehavior": {
				"disabledSystemHeaders": {
					"accept": true,
					"user-agent": true
				}
			},
			"request": {
				"method": "POST",
				"header": [
					{
						"key": "Cookie",
						"value": "XDEBUG_SESSION=PHPSTORM",
						"type": "text"
					},
					{
						"key": "Accept",
						"value": "application/json",
						"type": "text"
					},
					{
						"key": "X-Frontastic-Nonce",
						"value": "{{X-Frontastic-Nonce}}",
						"type": "text"
					},
					{
						"key": "X-Frontastic-Hash",
						"value": "{{X-Frontastic-Hash}}",
						"type": "text"
					}
				],
				"body": {
					"mode": "raw",
					"raw": "{\n\t\"query\": \"blue\"\t\n}",
					"options": {
						"raw": {
							"language": "json"
						}
					}
				},
				"url": {
					"raw": "{{host}}/api/product/search",
					"host": [
						"{{host}}"
					],
					"path": [
						"api",
						"product",
						"search"
					]
				}
			},
			"response": []
		},
		{
			"name": "searchableAttributes",
			"event": [
				{
					"listen": "prerequest",
					"script": {
						"exec": [
							"let sharedSecret = pm.variables.get(\"sharedSecret\");",
							"const nonce = _.random(0, 1000);",
							"const message = nonce + ':' + pm.request.body.raw;",
							"const hash = CryptoJS.HmacSHA256(message, sharedSecret).toString(CryptoJS.digest);",
							"pm.collectionVariables.set('X-Frontastic-Nonce', nonce);",
							"pm.collectionVariables.set('X-Frontastic-Hash', hash);"
						],
						"type": "text/javascript"
					}
				}
			],
			"protocolProfileBehavior": {
				"disableBodyPruning": true,
				"disabledSystemHeaders": {
					"accept": true,
					"user-agent": true
				}
			},
			"request": {
				"method": "GET",
				"header": [
					{
						"key": "Cookie",
						"value": "XDEBUG_SESSION=PHPSTORM",
						"type": "text"
					},
					{
						"key": "Accept",
						"value": "application/json",
						"type": "text"
					},
					{
						"key": "X-Frontastic-Nonce",
						"value": "{{X-Frontastic-Nonce}}",
						"type": "text"
					},
					{
						"key": "X-Frontastic-Hash",
						"value": "{{X-Frontastic-Hash}}",
						"type": "text"
					}
				],
				"body": {
					"mode": "raw",
					"raw": "",
					"options": {
						"raw": {
							"language": "json"
						}
					}
				},
				"url": {
					"raw": "{{host}}/api/project/searchableAttributes",
					"host": [
						"{{host}}"
					],
					"path": [
						"api",
						"project",
						"searchableAttributes"
					]
				}
			},
			"response": []
		},
		{
			"name": "contentsSearch(ContentSearchController listAction)",
			"event": [
				{
					"listen": "prerequest",
					"script": {
						"exec": [
							"let sharedSecret = pm.variables.get(\"sharedSecret\");",
							"const nonce = _.random(0, 1000);",
							"const message = nonce + ':' + pm.request.body.raw;",
							"const hash = CryptoJS.HmacSHA256(message, sharedSecret).toString(CryptoJS.digest);",
							"pm.collectionVariables.set('X-Frontastic-Nonce', nonce);",
							"pm.collectionVariables.set('X-Frontastic-Hash', hash);"
						],
						"type": "text/javascript"
					}
				},
				{
					"listen": "test",
					"script": {
						"exec": [
							""
						],
						"type": "text/javascript"
					}
				}
			],
			"protocolProfileBehavior": {
				"disabledSystemHeaders": {
					"accept": true,
					"user-agent": true
				}
			},
			"request": {
				"method": "POST",
				"header": [
					{
						"key": "Cookie",
						"value": "XDEBUG_SESSION=PHPSTORM",
						"type": "text"
					},
					{
						"key": "Accept",
						"value": "application/json",
						"type": "text"
					},
					{
						"key": "X-Frontastic-Nonce",
						"value": "{{X-Frontastic-Nonce}}",
						"type": "text"
					},
					{
						"key": "X-Frontastic-Hash",
						"value": "{{X-Frontastic-Hash}}",
						"type": "text"
					}
				],
				"body": {
					"mode": "raw",
					"raw": "{\n\t\"query\": \"1\"\t\n}",
					"options": {
						"raw": {
							"language": "json"
						}
					}
				},
				"url": {
					"raw": "{{host}}/api/contents/search",
					"host": [
						"{{host}}"
					],
					"path": [
						"api",
						"contents",
						"search"
					]
				}
			},
			"response": []
		},
		{
			"name": "contentsGet(ContentSearchController -> showAction)",
			"event": [
				{
					"listen": "prerequest",
					"script": {
						"exec": [
							"let sharedSecret = pm.variables.get(\"sharedSecret\");",
							"const nonce = _.random(0, 1000);",
							"const message = nonce + ':' + pm.request.body.raw;",
							"const hash = CryptoJS.HmacSHA256(message, sharedSecret).toString(CryptoJS.digest);",
							"pm.collectionVariables.set('X-Frontastic-Nonce', nonce);",
							"pm.collectionVariables.set('X-Frontastic-Hash', hash);"
						],
						"type": "text/javascript"
					}
				}
			],
			"protocolProfileBehavior": {
				"disabledSystemHeaders": {
					"accept": true,
					"user-agent": true
				}
			},
			"request": {
				"method": "POST",
				"header": [
					{
						"key": "Cookie",
						"value": "XDEBUG_SESSION=PHPSTORM",
						"type": "text"
					},
					{
						"key": "Accept",
						"value": "application/json",
						"type": "text"
					},
					{
						"key": "X-Frontastic-Nonce",
						"value": "{{X-Frontastic-Nonce}}",
						"type": "text"
					},
					{
						"key": "X-Frontastic-Hash",
						"value": "{{X-Frontastic-Hash}}",
						"type": "text"
					}
				],
				"body": {
					"mode": "raw",
					"raw": "{\n\t\"contentId\": \"1\"\t\n}",
					"options": {
						"raw": {
							"language": "json"
						}
					}
				},
				"url": {
					"raw": "{{host}}/api/contents/get",
					"host": [
						"{{host}}"
					],
					"path": [
						"api",
						"contents",
						"get"
					]
				}
			},
			"response": []
		},
		{
			"name": "viewContent(ContentController -> view)",
			"event": [
				{
					"listen": "prerequest",
					"script": {
						"exec": [
							"let sharedSecret = pm.variables.get(\"sharedSecret\");",
							"const nonce = _.random(0, 1000);",
							"const message = nonce + ':' + pm.request.body.raw;",
							"const hash = CryptoJS.HmacSHA256(message, sharedSecret).toString(CryptoJS.digest);",
							"pm.collectionVariables.set('X-Frontastic-Nonce', nonce);",
							"pm.collectionVariables.set('X-Frontastic-Hash', hash);"
						],
						"type": "text/javascript"
					}
				},
				{
					"listen": "test",
					"script": {
						"exec": [
							""
						],
						"type": "text/javascript"
					}
				}
			],
			"protocolProfileBehavior": {
				"disableBodyPruning": true,
				"disabledSystemHeaders": {
					"accept": true,
					"user-agent": true
				}
			},
			"request": {
				"method": "GET",
				"header": [
					{
						"key": "Cookie",
						"value": "XDEBUG_SESSION=PHPSTORM",
						"type": "text"
					},
					{
						"key": "Accept",
						"value": "application/json",
						"type": "text"
					},
					{
						"key": "X-Frontastic-Nonce",
						"value": "{{X-Frontastic-Nonce}}",
						"type": "text"
					},
					{
						"key": "X-Frontastic-Hash",
						"value": "{{X-Frontastic-Hash}}",
						"type": "text"
					}
				],
				"body": {
					"mode": "raw",
					"raw": "",
					"options": {
						"raw": {
							"language": "json"
						}
					}
				},
				"url": {
					"raw": "{{host}}/api/node/1",
					"host": [
						"{{host}}"
					],
					"path": [
						"api",
						"node",
						"1"
					]
				}
			},
			"response": []
		},
		{
			"name": "ProductView(ProductController -> viewAction)",
			"event": [
				{
					"listen": "prerequest",
					"script": {
						"exec": [
							"let sharedSecret = pm.variables.get(\"sharedSecret\");",
							"const nonce = _.random(0, 1000);",
							"const message = nonce + ':' + pm.request.body.raw;",
							"const hash = CryptoJS.HmacSHA256(message, sharedSecret).toString(CryptoJS.digest);",
							"pm.collectionVariables.set('X-Frontastic-Nonce', nonce);",
							"pm.collectionVariables.set('X-Frontastic-Hash', hash);"
						],
						"type": "text/javascript"
					}
				},
				{
					"listen": "test",
					"script": {
						"exec": [
							""
						],
						"type": "text/javascript"
					}
				}
			],
			"protocolProfileBehavior": {
				"disableBodyPruning": true,
				"disabledSystemHeaders": {
					"accept": true,
					"user-agent": true
				}
			},
			"request": {
				"method": "GET",
				"header": [
					{
						"key": "Cookie",
						"value": "XDEBUG_SESSION=PHPSTORM",
						"type": "text"
					},
					{
						"key": "Accept",
						"value": "application/json",
						"type": "text"
					},
					{
						"key": "X-Frontastic-Nonce",
						"value": "{{X-Frontastic-Nonce}}",
						"type": "text"
					},
					{
						"key": "X-Frontastic-Hash",
						"value": "{{X-Frontastic-Hash}}",
						"type": "text"
					}
				],
				"body": {
					"mode": "raw",
					"raw": "",
					"options": {
						"raw": {
							"language": "json"
						}
					}
				},
				"url": {
					"raw": "{{host}}/1/p/1",
					"host": [
						"{{host}}"
					],
					"path": [
						"1",
						"p",
						"1"
					]
				}
			},
			"response": []
		},
		{
			"name": "searchableAttributes(AttributesController -> searchableAttributes)",
			"event": [
				{
					"listen": "prerequest",
					"script": {
						"exec": [
							"let sharedSecret = pm.variables.get(\"sharedSecret\");",
							"const nonce = _.random(0, 1000);",
							"const message = nonce + ':' + pm.request.body.raw;",
							"const hash = CryptoJS.HmacSHA256(message, sharedSecret).toString(CryptoJS.digest);",
							"pm.collectionVariables.set('X-Frontastic-Nonce', nonce);",
							"pm.collectionVariables.set('X-Frontastic-Hash', hash);"
						],
						"type": "text/javascript"
					}
				},
				{
					"listen": "test",
					"script": {
						"exec": [
							""
						],
						"type": "text/javascript"
					}
				}
			],
			"protocolProfileBehavior": {
				"disableBodyPruning": true,
				"disabledSystemHeaders": {
					"accept": true,
					"user-agent": true
				}
			},
			"request": {
				"method": "GET",
				"header": [
					{
						"key": "Cookie",
						"value": "XDEBUG_SESSION=PHPSTORM",
						"type": "text"
					},
					{
						"key": "Accept",
						"value": "application/json",
						"type": "text"
					},
					{
						"key": "X-Frontastic-Nonce",
						"value": "{{X-Frontastic-Nonce}}",
						"type": "text"
					},
					{
						"key": "X-Frontastic-Hash",
						"value": "{{X-Frontastic-Hash}}",
						"type": "text"
					}
				],
				"body": {
					"mode": "raw",
					"raw": "",
					"options": {
						"raw": {
							"language": "json"
						}
					}
				},
				"url": {
					"raw": "{{host}}/api/project/searchableAttributes",
					"host": [
						"{{host}}"
					],
					"path": [
						"api",
						"project",
						"searchableAttributes"
					]
				}
			},
			"response": []
		},
		{
			"name": "preview(PreviewController -> storeAction)",
			"event": [
				{
					"listen": "prerequest",
					"script": {
						"exec": [
							"let sharedSecret = pm.variables.get(\"sharedSecret\");",
							"const nonce = _.random(0, 1000);",
							"const message = nonce + ':' + pm.request.body.raw;",
							"const hash = CryptoJS.HmacSHA256(message, sharedSecret).toString(CryptoJS.digest);",
							"pm.collectionVariables.set('X-Frontastic-Nonce', nonce);",
							"pm.collectionVariables.set('X-Frontastic-Hash', hash);"
						],
						"type": "text/javascript"
					}
				},
				{
					"listen": "test",
					"script": {
						"exec": [
							"pm.test(\"Status code is 200\", function () {",
							"    pm.response.to.have.status(200);",
							"});",
							"",
							"var Ajv = require('ajv'),",
							"ajv = new Ajv({logger: console}),",
							"schema = ",
							"{",
							"  \"required\": [",
							"    \"ok\",",
							"    \"link\",",
							"    \"preview\",",
							"  ],",
							"  \"properties\": {",
							"    \"ok\": {",
							"      \"type\": \"boolean\"",
							"    },",
							"    \"link\": {",
							"      \"type\": \"string\"",
							"    },",
							"    \"preview\": {",
							"      \"type\": \"object\",",
							"        \"required\": [",
							"            \"previewId\"",
							"        ],",
							"        \"properties\":{",
							"            \"previewId\": {",
							"                \"type\": \"string\"",
							"            }",
							"        }",
							"    }",
							"  }",
							"};",
							"",
							"pm.test('Schema is valid', function() {",
							"    pm.expect(ajv.validate(schema, pm.response.json())).to.be.true;",
							"});"
						],
						"type": "text/javascript"
					}
				}
			],
			"protocolProfileBehavior": {
				"disabledSystemHeaders": {
					"accept": true,
					"user-agent": true
				}
			},
			"request": {
				"method": "POST",
				"header": [
					{
						"key": "Cookie",
						"value": "XDEBUG_SESSION=PHPSTORM",
						"type": "text"
					},
					{
						"key": "Accept",
						"value": "application/json",
						"type": "text"
					},
					{
						"key": "X-Frontastic-Nonce",
						"value": "{{X-Frontastic-Nonce}}",
						"type": "text"
					},
					{
						"key": "X-Frontastic-Hash",
						"value": "{{X-Frontastic-Hash}}",
						"type": "text"
					}
				],
				"body": {
					"mode": "raw",
					"raw": "{\"previewId\":\"4c6dc4ea\",\"link\":null,\"node\":{\"nodeId\":\"76c45b3c0c39b00287f28cb7ac0285c8\",\"isMaster\":false,\"sequence\":\"001603806612605103\",\"configuration\":{\"path\":\"\\/\",\"displayEmphasis\":\"true\",\"pathTranslations\":[],\"seoTitle\":{\"en_GB@EUR\":\"Frontastic Demo\"},\"seoDescription\":{\"en_GB@EUR\":\"This is the Frontastic Demo Catwalk\"}},\"streams\":[{\"streamId\":\"c56e8331-6841-4b7a-9adb-01a425c40e31\",\"type\":\"product-list\",\"name\":\"Blaue Jacken\",\"configuration\":{\"facets\":[],\"category\":\"67830b85-e999-4e8b-9d4a-8986048e9421\",\"query\":\"Blue\"}},{\"streamId\":\"a4768eb9-fa13-4845-bb1d-c04cf531a46f\",\"type\":\"product-list\",\"name\":\"Women Clothing\",\"configuration\":{\"category\":\"26ac3da2-5ce6-4643-b9ba-b70db009f31d\",\"productType\":\"580283f4-22d3-4b04-a710-df355d18ae6e\",\"facets\":[]}}],\"name\":\"Main\",\"children\":[],\"path\":[],\"sort\":0,\"versions\":[],\"environments\":{\"production\":true,\"staging\":true,\"development\":true},\"metaData\":{\"author\":\"system@frontastic.io\",\"changed\":{\"date\":\"2021-04-08 15:53:53.469009\",\"timezone_type\":3,\"timezone\":\"Europe\\/Berlin\"}},\"isDeleted\":false},\"page\":{\"pageId\":\"26de550d8826ff9bd1527742d80fde1e\",\"sequence\":null,\"state\":\"draft\",\"name\":\"Start Page (Default)\",\"nodes\":[\"76c45b3c0c39b00287f28cb7ac0285c8\"],\"layoutId\":\"three_rows\",\"regions\":{\"head\":{\"regionId\":\"head\",\"configuration\":[],\"elements\":[{\"cellId\":\"273dd061\",\"configuration\":{\"size\":12},\"customConfiguration\":[],\"tastics\":[{\"tasticId\":\"e731f392-f99c-41ae-a1fe-6a28eac1ac5a\",\"tasticType\":\"frontastic\\/boost\\/header\\/main-menu\",\"configuration\":{\"topCategories\":[{\"name\":\"Women\",\"tree\":{\"node\":\"dd63c4eab6fae4fc3657e62a3c008f51\",\"depth\":\"1\"},\"reference\":{\"type\":\"node\",\"target\":\"dd63c4eab6fae4fc3657e62a3c008f51\"},\"mobileNavBackgroundImage\":{\"media\":{\"_type\":\"Frontastic\\\\Backstage\\\\MediaApiBundle\\\\Domain\\\\MediaApi\\\\Media\",\"mediaId\":\"ztk2e1g6puizro1ezxh6\",\"name\":\"Special-collection-desktop\",\"tags\":[\"__none\"],\"file\":\"https:\\/\\/res.cloudinary.com\\/dlwdq84ig\\/image\\/upload\\/v1593099474\\/ztk2e1g6puizro1ezxh6.jpg\",\"size\":1354498,\"width\":2400,\"height\":931,\"format\":\"jpg\",\"created\":\"2020-06-25T15:37:54+00:00\",\"metaData\":[]},\"gravity\":{\"mode\":\"faces\"}},\"undefined\":null},{\"name\":\"Men\",\"tree\":{\"node\":\"dd63c4eab6fae4fc3657e62a3c014068\",\"depth\":\"1\"},\"reference\":{\"type\":\"node\",\"target\":\"dd63c4eab6fae4fc3657e62a3c014068\",\"mode\":\"default\"},\"mobileNavBackgroundImage\":{\"media\":{\"_type\":\"Frontastic\\\\Backstage\\\\MediaApiBundle\\\\Domain\\\\MediaApi\\\\Media\",\"mediaId\":\"lll4jmcm1pzvo1ieuhha\",\"name\":\"Special-collection@2x (2)\",\"tags\":[\"__none\"],\"file\":\"https:\\/\\/res.cloudinary.com\\/dlwdq84ig\\/image\\/upload\\/v1601032403\\/lll4jmcm1pzvo1ieuhha.jpg\",\"size\":566229,\"width\":2400,\"height\":926,\"format\":\"jpg\",\"created\":\"2020-09-25T11:13:23+00:00\",\"metaData\":[]}},\"undefined\":null}],\"logo\":{\"media\":{\"_type\":\"Frontastic\\\\Backstage\\\\MediaApiBundle\\\\Domain\\\\MediaApi\\\\Media\",\"mediaId\":\"Logo_wlosry\",\"name\":\"Catwalk-Logo\",\"tags\":[\"__none\"],\"file\":\"https:\\/\\/res.cloudinary.com\\/dlwdq84ig\\/image\\/upload\\/v1594976600\\/Logo_wlosry.svg\",\"size\":7379,\"width\":117,\"height\":25,\"format\":\"svg\",\"created\":\"2020-07-17T09:03:20+00:00\",\"metaData\":[]}}},\"isDeleted\":false}]}],\"cells\":[]},\"main\":{\"regionId\":\"main\",\"configuration\":[],\"elements\":[{\"cellId\":\"d77818b3-1d6d-4692-b894-c5dba3a8c6ab\",\"configuration\":{\"size\":6},\"customConfiguration\":[],\"tastics\":[{\"tasticId\":\"225e9f6c-5947-4059-81fd-4a284f262dd2\",\"tasticType\":\"frontastic\\/boost\\/content\\/tile-v2\",\"configuration\":{\"bgImage\":{\"media\":{\"_type\":\"Frontastic\\\\Backstage\\\\MediaApiBundle\\\\Domain\\\\MediaApi\\\\Media\",\"mediaId\":\"fbvsipbf8duvt1eghhsb\",\"name\":\"Startpage@2x\",\"tags\":[\"__none\"],\"file\":\"https:\\/\\/res.cloudinary.com\\/dlwdq84ig\\/image\\/upload\\/v1590583112\\/fbvsipbf8duvt1eghhsb.jpg\",\"size\":165854,\"width\":576,\"height\":360,\"format\":\"jpg\",\"created\":\"2020-05-27T12:38:32+00:00\",\"metaData\":[]}},\"isFullWidth\":false,\"fgIsFullWidth\":true,\"headline\":{\"en_GB@EUR\":\"Ladies? \"},\"subhead\":{\"en_GB@EUR\":\"Ready for some fashion? \"},\"isSubheadBold\":true,\"isHeadlineBold\":false,\"theme\":\"dark\",\"ctaLabel\":{\"en_GB@EUR\":\"This way! \"},\"reference\":{\"type\":\"node\",\"target\":\"dd63c4eab6fae4fc3657e62a3c008f51\"},\"isClickable\":false,\"ctaIsButton\":true,\"ctaColor\":\"primary\",\"name\":{\"en_GB@EUR\":\"Women [Desktop]\"},\"fgSize\":\"50%\",\"aspect\":\"4\\/3\",\"desktop\":true,\"mobile\":false},\"isDeleted\":false},{\"tasticId\":\"f261d947-0318-4c83-9cea-2fa5f88f40dd\",\"tasticType\":\"frontastic\\/boost\\/content\\/tile-v2\",\"configuration\":{\"bgImage\":{\"media\":{\"_type\":\"Frontastic\\\\Backstage\\\\MediaApiBundle\\\\Domain\\\\MediaApi\\\\Media\",\"mediaId\":\"fbvsipbf8duvt1eghhsb\",\"name\":\"Startpage@2x\",\"tags\":[\"__none\"],\"file\":\"https:\\/\\/res.cloudinary.com\\/dlwdq84ig\\/image\\/upload\\/v1590583112\\/fbvsipbf8duvt1eghhsb.jpg\",\"size\":165854,\"width\":576,\"height\":360,\"format\":\"jpg\",\"created\":\"2020-05-27T12:38:32+00:00\",\"metaData\":[]}},\"isFullWidth\":true,\"fgIsFullWidth\":true,\"headline\":{\"en_GB@EUR\":\"Ladies? \"},\"subhead\":{\"en_GB@EUR\":\"Ready for some fashion? \"},\"isSubheadBold\":true,\"isHeadlineBold\":false,\"theme\":\"dark\",\"ctaLabel\":{\"en_GB@EUR\":\"This way! \"},\"reference\":{\"type\":\"node\",\"target\":\"dd63c4eab6fae4fc3657e62a3c008f51\"},\"isClickable\":false,\"ctaIsButton\":true,\"ctaColor\":\"primary\",\"name\":{\"en_GB@EUR\":\"Women [Mobile]\"},\"fgSize\":\"50%\",\"aspect\":\"4\\/3\",\"tablet\":false,\"desktop\":false,\"headlineSize\":\"2xl\",\"subheadSize\":\"5xl\"},\"isDeleted\":false},{\"tasticId\":\"ec77c767-d4b0-49c0-b1b8-4df86f7d7294\",\"tasticType\":\"frontastic\\/boost\\/helpers\\/horizontal-spacer\",\"configuration\":{\"spaceInPx\":20,\"mobile\":true,\"tablet\":false,\"desktop\":false},\"isDeleted\":false}]},{\"cellId\":\"8cfc8e42-ce09-40fd-b676-7f15a85a6f5f\",\"configuration\":{\"size\":6},\"customConfiguration\":[],\"tastics\":[{\"tasticId\":\"b580ad19-ac70-461e-8ebd-c01dd9352700\",\"tasticType\":\"frontastic\\/boost\\/content\\/tile-v2\",\"configuration\":{\"bgImage\":{\"media\":{\"_type\":\"Frontastic\\\\Backstage\\\\MediaApiBundle\\\\Domain\\\\MediaApi\\\\Media\",\"mediaId\":\"uu7qp5oirrllm7rcxhme\",\"name\":\"Startpage2@2x\",\"tags\":[\"__none\"],\"file\":\"https:\\/\\/res.cloudinary.com\\/dlwdq84ig\\/image\\/upload\\/v1590583136\\/uu7qp5oirrllm7rcxhme.jpg\",\"size\":134482,\"width\":576,\"height\":360,\"format\":\"jpg\",\"created\":\"2020-05-27T12:38:56+00:00\",\"metaData\":[]}},\"isFullWidth\":false,\"fgIsFullWidth\":true,\"headline\":{\"en_GB@EUR\":\"Gents? \"},\"subhead\":{\"en_GB@EUR\":\"This way! \"},\"isSubheadBold\":true,\"isHeadlineBold\":false,\"theme\":\"dark\",\"ctaLabel\":{\"en_GB@EUR\":\"This way! \"},\"reference\":{\"type\":\"node\",\"target\":\"dd63c4eab6fae4fc3657e62a3c014068\"},\"isClickable\":false,\"ctaIsButton\":true,\"ctaColor\":\"primary\",\"name\":{\"en_GB@EUR\":\"Men [Desktop]\"},\"aspect\":\"4\\/3\",\"fgSize\":\"50%\",\"mobile\":false},\"isDeleted\":false},{\"tasticId\":\"f6605033-10bc-4990-83ef-218711cfe0ef\",\"tasticType\":\"frontastic\\/boost\\/content\\/tile-v2\",\"configuration\":{\"bgImage\":{\"media\":{\"_type\":\"Frontastic\\\\Backstage\\\\MediaApiBundle\\\\Domain\\\\MediaApi\\\\Media\",\"mediaId\":\"uu7qp5oirrllm7rcxhme\",\"name\":\"Startpage2@2x\",\"tags\":[\"__none\"],\"file\":\"https:\\/\\/res.cloudinary.com\\/dlwdq84ig\\/image\\/upload\\/v1590583136\\/uu7qp5oirrllm7rcxhme.jpg\",\"size\":134482,\"width\":576,\"height\":360,\"format\":\"jpg\",\"created\":\"2020-05-27T12:38:56+00:00\",\"metaData\":[]}},\"isFullWidth\":true,\"fgIsFullWidth\":true,\"headline\":{\"en_GB@EUR\":\"Gents? \"},\"subhead\":{\"en_GB@EUR\":\"This way! \"},\"isSubheadBold\":true,\"isHeadlineBold\":false,\"theme\":\"dark\",\"ctaLabel\":{\"en_GB@EUR\":\"This way! \"},\"reference\":{\"type\":\"node\",\"target\":\"dd63c4eab6fae4fc3657e62a3c014068\"},\"isClickable\":false,\"ctaIsButton\":true,\"ctaColor\":\"primary\",\"name\":{\"en_GB@EUR\":\"Men [Mobile]\"},\"aspect\":\"4\\/3\",\"fgSize\":\"50%\",\"desktop\":false,\"tablet\":false,\"headlineSize\":\"2xl\",\"subheadSize\":\"5xl\"},\"isDeleted\":false}]},{\"cellId\":\"299c384f-bd84-4158-960a-62d2d5341d9c\",\"configuration\":{\"size\":12},\"customConfiguration\":[],\"tastics\":[{\"tasticId\":\"8b776bad-720e-4c27-84d5-cc3f410e6a4f\",\"tasticType\":\"frontastic\\/boost\\/helpers\\/horizontal-spacer\",\"configuration\":{\"size\":\"lg\",\"spaceInPx\":0},\"isDeleted\":false},{\"tasticId\":\"a9a57c7b-34fe-4e4d-b4bc-f7d8858cadaa\",\"tasticType\":\"frontastic\\/boost\\/content\\/markdown\",\"configuration\":{\"text\":{\"en_GB@EUR\":\"##New styles everyday - here are our best! \"},\"align\":\"center\"},\"isDeleted\":false},{\"tasticId\":\"596202ba-2059-4fd5-9a5e-2cfe471b4fb8\",\"tasticType\":\"frontastic\\/boost\\/product\\/product-slider\",\"configuration\":{\"title\":{\"en_GB@EUR\":\"\"},\"stream\":\"a4768eb9-fa13-4845-bb1d-c04cf531a46f\",\"productCount\":16},\"isDeleted\":false}]},{\"cellId\":\"87d07322-61db-4755-bd5a-8b6012e107f9\",\"configuration\":{\"size\":12},\"customConfiguration\":[],\"tastics\":[{\"tasticId\":\"f320390c-ab8a-496a-9bf1-09c879d1aa54\",\"tasticType\":\"frontastic\\/boost\\/helpers\\/horizontal-spacer\",\"configuration\":{\"spaceInPx\":0,\"size\":\"lg\"},\"isDeleted\":false},{\"tasticId\":\"874d86f9-a866-47ab-bff3-c24b76a0517f\",\"tasticType\":\"frontastic\\/boost\\/forms\\/newsletter-block\",\"configuration\":[],\"isDeleted\":false}]}],\"cells\":[]},\"footer\":{\"regionId\":\"footer\",\"configuration\":[],\"elements\":[{\"cellId\":\"ffd42258-6b99-4d5e-abad-2be421d6e067\",\"configuration\":{\"size\":12},\"customConfiguration\":[],\"tastics\":[{\"tasticId\":\"337f338a-ad87-43f8-9803-ec3bbe7f4f23\",\"tasticType\":\"frontastic\\/boost\\/content\\/feature-service\",\"configuration\":[],\"isDeleted\":false},{\"tasticId\":\"966ea8d9-9be5-479a-bb5b-95b215bbb890\",\"tasticType\":\"frontastic\\/boost\\/footer\",\"configuration\":{\"title\":{\"en_GB@EUR\":\"\\u00a9 Catwalk\"},\"links\":[{\"label\":{\"en_GB@EUR\":\"Cookies\"},\"reference\":{\"type\":\"node\",\"target\":\"\"}},{\"label\":{\"en_GB@EUR\":\"Privacy policy\"},\"reference\":{\"type\":\"node\",\"target\":\"\"}},{\"label\":{\"en_GB@EUR\":\"T&C\"},\"reference\":{\"type\":\"node\",\"target\":\"\"}}],\"infoLinks\":[{\"label\":{\"en_GB@EUR\":\"Order status\"},\"reference\":{\"type\":\"node\",\"target\":\"\"}},{\"label\":{\"en_GB@EUR\":\"Shipment\"},\"reference\":{\"type\":\"node\",\"target\":\"\"}},{\"label\":{\"en_GB@EUR\":\"Returns and exchanges\"},\"reference\":{\"type\":\"node\",\"target\":\"\"}},{\"label\":{\"en_GB@EUR\":\"Refunds\"},\"reference\":{\"type\":\"node\",\"target\":\"\"}},{\"label\":{\"en_GB@EUR\":\"FAQ\"},\"reference\":{\"type\":\"node\",\"target\":\"\"}}],\"contacHeader\":{\"en_GB@EUR\":\"Contact us\"},\"phoneNumber\":{\"en_GB@EUR\":\"02300 77 77 5\"},\"email\":{\"en_GB@EUR\":\"hello@frontastic.cloud\"},\"aboutHeader\":{\"en_GB@EUR\":\"About Catwalk\"},\"aboutHeaderIcon\":\"announcement\",\"infoHeader\":{\"en_GB@EUR\":\"Help & information\"},\"infoHeaderIcon\":\"help\",\"aboutLinks\":[{\"label\":{\"en_GB@EUR\":\"About us\"},\"reference\":{\"type\":\"node\",\"target\":\"\"}},{\"label\":{\"en_GB@EUR\":\"Careers\"},\"reference\":{\"type\":\"node\",\"target\":\"\"}},{\"label\":{\"en_GB@EUR\":\"Partnerships\"},\"reference\":{\"type\":\"node\",\"target\":\"\"}},{\"label\":{\"en_GB@EUR\":\"Press\"},\"reference\":{\"type\":\"node\",\"target\":\"\"}}],\"paymentMethods\":[{\"playmentIcon\":\"paypal\"},{\"playmentIcon\":\"visa\"},{\"playmentIcon\":\"mastercard\"}]},\"isDeleted\":false}]}],\"cells\":[]}},\"versions\":[{\"pageId\":null,\"sequence\":null,\"state\":\"draft\",\"name\":null,\"nodes\":[],\"layoutId\":null,\"regions\":[],\"versions\":[],\"environments\":[],\"scheduledFrom\":null,\"scheduledTo\":null,\"nodesPagesOfTypeSortIndex\":null,\"scheduledExperiment\":null,\"scheduleCriterion\":\"\",\"metaData\":null,\"isDeleted\":false}],\"environments\":[],\"scheduledFrom\":null,\"scheduledTo\":null,\"nodesPagesOfTypeSortIndex\":null,\"scheduledExperiment\":null,\"scheduleCriterion\":\"\",\"metaData\":null,\"isDeleted\":false},\"metaData\":null}",
					"options": {
						"raw": {
							"language": "json"
						}
					}
				},
				"url": {
					"raw": "{{host}}/preview",
					"host": [
						"{{host}}"
					],
					"path": [
						"preview"
					]
				}
			},
			"response": []
		},
		{
			"name": "ApiContect(ApiController -> contextAction)",
			"event": [
				{
					"listen": "prerequest",
					"script": {
						"exec": [
							"let sharedSecret = pm.variables.get(\"sharedSecret\");",
							"const nonce = _.random(0, 1000);",
							"const message = nonce + ':' + pm.request.body.raw;",
							"const hash = CryptoJS.HmacSHA256(message, sharedSecret).toString(CryptoJS.digest);",
							"pm.collectionVariables.set('X-Frontastic-Nonce', nonce);",
							"pm.collectionVariables.set('X-Frontastic-Hash', hash);"
						],
						"type": "text/javascript"
					}
				},
				{
					"listen": "test",
					"script": {
						"exec": [
							"pm.test(\"Status code is 200\", function () {",
							"    pm.response.to.have.status(200);",
							"});",
							"",
							"var Ajv = require('ajv'),",
							"ajv = new Ajv({logger: console}),",
							"schema = ",
							"{",
							"  \"required\": [",
							"    \"_type\",",
							"    \"environment\",",
							"    \"customer\",",
							"  ],",
							"  \"properties\": {",
							"    \"_type\": {",
							"      \"type\": \"string\"",
							"    },",
							"    \"environment\": {",
							"      \"type\": \"string\"",
							"    },",
							"    \"customer\": {",
							"      \"type\": \"object\",",
							"        \"required\": [",
							"            \"_type\"",
							"        ],",
							"        \"properties\":{",
							"            \"_type\": {",
							"                \"type\": \"string\"",
							"            }",
							"        }",
							"    }",
							"  }",
							"};",
							"",
							"pm.test('Schema is valid', function() {",
							"    pm.expect(ajv.validate(schema, pm.response.json())).to.be.true;",
							"});"
						],
						"type": "text/javascript"
					}
				}
			],
			"protocolProfileBehavior": {
				"disabledSystemHeaders": {
					"accept": true,
					"user-agent": true
				},
				"disableBodyPruning": true
			},
			"request": {
				"method": "GET",
				"header": [
					{
						"key": "Cookie",
						"value": "XDEBUG_SESSION=PHPSTORM",
						"type": "text"
					},
					{
						"key": "Accept",
						"value": "application/json",
						"type": "text"
					},
					{
						"key": "X-Frontastic-Nonce",
						"value": "{{X-Frontastic-Nonce}}",
						"type": "text"
					},
					{
						"key": "X-Frontastic-Hash",
						"value": "{{X-Frontastic-Hash}}",
						"type": "text"
					}
				],
				"body": {
					"mode": "raw",
					"raw": "",
					"options": {
						"raw": {
							"language": "json"
						}
					}
				},
				"url": {
					"raw": "{{host}}/api/context",
					"host": [
						"{{host}}"
					],
					"path": [
						"api",
						"context"
					]
				}
			},
			"response": []
		},
		{
			"name": "getAction(AppController -> getAction)",
			"event": [
				{
					"listen": "prerequest",
					"script": {
						"exec": [
							"let sharedSecret = pm.variables.get(\"sharedSecret\");",
							"const nonce = _.random(0, 1000);",
							"const message = nonce + ':' + pm.request.body.raw;",
							"const hash = CryptoJS.HmacSHA256(message, sharedSecret).toString(CryptoJS.digest);",
							"pm.collectionVariables.set('X-Frontastic-Nonce', nonce);",
							"pm.collectionVariables.set('X-Frontastic-Hash', hash);"
						],
						"type": "text/javascript"
					}
				},
				{
					"listen": "test",
					"script": {
						"exec": [
							"pm.test(\"Status code is 200\", function () {",
							"    pm.response.to.have.status(200);",
							"});",
							"",
							"var Ajv = require('ajv'),",
							"ajv = new Ajv({logger: console}),",
							"schema = ",
							"{",
							"  \"required\": [",
							"    \"_type\",",
							"    \"environment\",",
							"    \"customer\",",
							"  ],",
							"  \"properties\": {",
							"    \"_type\": {",
							"      \"type\": \"string\"",
							"    },",
							"    \"environment\": {",
							"      \"type\": \"string\"",
							"    },",
							"    \"customer\": {",
							"      \"type\": \"object\",",
							"        \"required\": [",
							"            \"_type\"",
							"        ],",
							"        \"properties\":{",
							"            \"_type\": {",
							"                \"type\": \"string\"",
							"            }",
							"        }",
							"    }",
							"  }",
							"};",
							"",
							"pm.test('Schema is valid', function() {",
							"    pm.expect(ajv.validate(schema, pm.response.json())).to.be.true;",
							"});"
						],
						"type": "text/javascript"
					}
				}
			],
			"protocolProfileBehavior": {
				"disabledSystemHeaders": {
					"accept": true,
					"user-agent": true
				},
				"disableBodyPruning": true
			},
			"request": {
				"method": "GET",
				"header": [
					{
						"key": "Cookie",
						"value": "XDEBUG_SESSION=PHPSTORM",
						"type": "text"
					},
					{
						"key": "Accept",
						"value": "application/json",
						"type": "text"
					},
					{
						"key": "X-Frontastic-Nonce",
						"value": "{{X-Frontastic-Nonce}}",
						"type": "text"
					},
					{
						"key": "X-Frontastic-Hash",
						"value": "{{X-Frontastic-Hash}}",
						"type": "text"
					}
				],
				"body": {
					"mode": "raw",
					"raw": "",
					"options": {
						"raw": {
							"language": "json"
						}
					}
				},
				"url": {
					"raw": "{{host}}/api/1/data",
					"host": [
						"{{host}}"
					],
					"path": [
						"api",
						"1",
						"data"
					]
				}
			},
			"response": []
		},
		{
			"name": "getCart(CartController -> getAction)",
			"event": [
				{
					"listen": "prerequest",
					"script": {
						"exec": [
							"let sharedSecret = pm.variables.get(\"sharedSecret\");",
							"const nonce = _.random(0, 1000);",
							"const message = nonce + ':' + pm.request.body.raw;",
							"const hash = CryptoJS.HmacSHA256(message, sharedSecret).toString(CryptoJS.digest);",
							"pm.collectionVariables.set('X-Frontastic-Nonce', nonce);",
							"pm.collectionVariables.set('X-Frontastic-Hash', hash);"
						],
						"type": "text/javascript"
					}
				},
				{
					"listen": "test",
					"script": {
						"exec": [
							"pm.test(\"Status code is 200\", function () {",
							"    pm.response.to.have.status(200);",
							"});",
							"",
							"var Ajv = require('ajv'),",
							"ajv = new Ajv({logger: console}),",
							"schema = ",
							"{",
							"  \"required\": [",
							"    \"cart\",",
							"  ],",
							"  \"properties\": {",
							"    \"cart\": {",
							"      \"type\": \"object\",",
							"        \"required\": [",
							"            \"_type\",",
							"            \"cartId\"",
							"        ],",
							"        \"properties\":{",
							"            \"_type\": {",
							"                \"type\": \"string\"",
							"            },",
							"            \"cartId\": {",
							"                \"type\": \"string\"",
							"            }",
							"        }",
							"    }",
							"  }",
							"};",
							"",
							"pm.test('Schema is valid', function() {",
							"    pm.expect(ajv.validate(schema, pm.response.json())).to.be.true;",
							"});"
						],
						"type": "text/javascript"
					}
				}
			],
			"protocolProfileBehavior": {
				"disabledSystemHeaders": {
					"accept": true,
					"user-agent": true
				},
				"disableBodyPruning": true
			},
			"request": {
				"method": "GET",
				"header": [
					{
						"key": "Cookie",
						"value": "XDEBUG_SESSION=PHPSTORM",
						"type": "text"
					},
					{
						"key": "Accept",
						"value": "application/json",
						"type": "text"
					},
					{
						"key": "X-Frontastic-Nonce",
						"value": "{{X-Frontastic-Nonce}}",
						"type": "text"
					},
					{
						"key": "X-Frontastic-Hash",
						"value": "{{X-Frontastic-Hash}}",
						"type": "text"
					}
				],
				"body": {
					"mode": "raw",
					"raw": "",
					"options": {
						"raw": {
							"language": "json"
						}
					}
				},
				"url": {
					"raw": "{{host}}/api/cart/cart",
					"host": [
						"{{host}}"
					],
					"path": [
						"api",
						"cart",
						"cart"
					]
				}
			},
			"response": []
		},
		{
			"name": "updateAccountPassword(AccountAuthController -> changePasswordAction )",
			"event": [
				{
					"listen": "prerequest",
					"script": {
						"exec": [
							"let sharedSecret = pm.variables.get(\"sharedSecret\");",
							"const nonce = _.random(0, 1000);",
							"const message = nonce + ':' + pm.request.body.raw;",
							"const hash = CryptoJS.HmacSHA256(message, sharedSecret).toString(CryptoJS.digest);",
							"pm.collectionVariables.set('X-Frontastic-Nonce', nonce);",
							"pm.collectionVariables.set('X-Frontastic-Hash', hash);"
						],
						"type": "text/javascript"
					}
				}
			],
			"request": {
				"method": "POST",
				"header": [
					{
						"key": "accept",
						"value": "application/json",
						"type": "text"
					},
					{
						"key": "User-Agent",
						"value": "Mozilla/5.0 (Macintosh; Intel Mac OS X 11_1_0) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/89.0.4389.114 Safari/537.36",
						"type": "text"
					},
					{
						"key": "content-type",
						"value": "application/json",
						"type": "text"
					},
					{
						"key": "X-Frontastic-Nonce",
						"value": "{{X-Frontastic-Nonce}}",
						"type": "text"
					},
					{
						"key": "X-Frontastic-Hash",
						"value": "{{X-Frontastic-Hash}}",
						"type": "text"
					}
				],
				"body": {
					"mode": "raw",
					"raw": "{\"oldPassword\":\"test1234\",\"newPassword\":\"test1234\"}"
				},
				"url": {
					"raw": "{{host}}/api/account/password?ownErrorHandler=1",
					"host": [
						"{{host}}"
					],
					"path": [
						"api",
						"account",
						"password"
					],
					"query": [
						{
							"key": "ownErrorHandler",
							"value": "1"
						}
					]
				}
			},
			"response": []
		},
		{
			"name": "updateAccount(AccountAuthController -> updateAction )",
			"event": [
				{
					"listen": "prerequest",
					"script": {
						"exec": [
							"let sharedSecret = pm.variables.get(\"sharedSecret\");",
							"const nonce = _.random(0, 1000);",
							"const message = nonce + ':' + pm.request.body.raw;",
							"const hash = CryptoJS.HmacSHA256(message, sharedSecret).toString(CryptoJS.digest);",
							"pm.collectionVariables.set('X-Frontastic-Nonce', nonce);",
							"pm.collectionVariables.set('X-Frontastic-Hash', hash);"
						],
						"type": "text/javascript"
					}
				}
			],
			"request": {
				"method": "POST",
				"header": [
					{
						"key": "accept",
						"value": "application/json",
						"type": "text"
					},
					{
						"key": "User-Agent",
						"value": "Mozilla/5.0 (Macintosh; Intel Mac OS X 11_1_0) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/89.0.4389.114 Safari/537.36",
						"type": "text"
					},
					{
						"key": "content-type",
						"value": "application/json",
						"type": "text"
					},
					{
						"key": "X-Frontastic-Nonce",
						"value": "{{X-Frontastic-Nonce}}",
						"type": "text"
					},
					{
						"key": "X-Frontastic-Hash",
						"value": "{{X-Frontastic-Hash}}",
						"type": "text"
					}
				],
				"body": {
					"mode": "raw",
					"raw": "{\"firstName\":\"jim2\",\"lastName\":\"arvanitidis\"}"
				},
				"url": {
					"raw": "{{host}}/update",
					"host": [
						"{{host}}"
					],
					"path": [
						"update"
					]
				}
			},
			"response": []
		},
		{
			"name": "getPaymentMethods",
			"request": {
				"method": "GET",
				"header": [
					{
						"key": "sec-ch-ua",
						"value": "\"Google Chrome\";v=\"89\", \"Chromium\";v=\"89\", \";Not A Brand\";v=\"99\""
					},
					{
						"key": "Accept",
						"value": "application/json"
					},
					{
						"key": "sec-ch-ua-mobile",
						"value": "?0"
					},
					{
						"key": "User-Agent",
						"value": "Mozilla/5.0 (Macintosh; Intel Mac OS X 11_1_0) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/89.0.4389.114 Safari/537.36"
					}
				],
				"url": {
					"raw": "{{host}}/api/payment/adyen/paymentMethods",
					"host": [
						"{{host}}"
					],
					"path": [
						"api",
						"payment",
						"adyen",
						"paymentMethods"
					]
				}
			},
			"response": []
		},
		{
			"name": "getOrder(CartController -> getOrderAction)",
			"event": [
				{
					"listen": "prerequest",
					"script": {
						"exec": [
							"let sharedSecret = pm.variables.get(\"sharedSecret\");",
							"const nonce = _.random(0, 1000);",
							"const message = nonce + ':' + pm.request.body.raw;",
							"const hash = CryptoJS.HmacSHA256(message, sharedSecret).toString(CryptoJS.digest);",
							"pm.collectionVariables.set('X-Frontastic-Nonce', nonce);",
							"pm.collectionVariables.set('X-Frontastic-Hash', hash);"
						],
						"type": "text/javascript"
					}
				},
				{
					"listen": "test",
					"script": {
						"exec": [
							"pm.test(\"Status code is 200\", function () {",
							"    pm.response.to.have.status(200);",
							"});",
							"",
							"var Ajv = require('ajv'),",
							"ajv = new Ajv({logger: console}),",
							"schema = ",
							"{",
							"  \"required\": [",
							"    \"cart\",",
							"  ],",
							"  \"properties\": {",
							"    \"cart\": {",
							"      \"type\": \"object\",",
							"        \"required\": [",
							"            \"_type\",",
							"            \"cartId\"",
							"        ],",
							"        \"properties\":{",
							"            \"_type\": {",
							"                \"type\": \"string\"",
							"            },",
							"            \"cartId\": {",
							"                \"type\": \"string\"",
							"            }",
							"        }",
							"    }",
							"  }",
							"};",
							"",
							"pm.test('Schema is valid', function() {",
							"    pm.expect(ajv.validate(schema, pm.response.json())).to.be.true;",
							"});"
						],
						"type": "text/javascript"
					}
				}
			],
			"protocolProfileBehavior": {
				"disabledSystemHeaders": {
					"accept": true,
					"user-agent": true
				},
				"disableBodyPruning": true
			},
			"request": {
				"method": "GET",
				"header": [
					{
						"key": "Cookie",
						"value": "XDEBUG_SESSION=PHPSTORM",
						"type": "text"
					},
					{
						"key": "Accept",
						"value": "application/json",
						"type": "text"
					},
					{
						"key": "X-Frontastic-Nonce",
						"value": "{{X-Frontastic-Nonce}}",
						"type": "text"
					},
					{
						"key": "X-Frontastic-Hash",
						"value": "{{X-Frontastic-Hash}}",
						"type": "text"
					}
				],
				"body": {
					"mode": "raw",
					"raw": "",
					"options": {
						"raw": {
							"language": "json"
						}
					}
				},
				"url": {
					"raw": "{{host}}/api/cart/order/weg",
					"host": [
						"{{host}}"
					],
					"path": [
						"api",
						"cart",
						"order",
						"weg"
					]
				}
			},
			"response": []
		},
		{
			"name": "cartUpdate(CartController -> updateAction)",
			"event": [
				{
					"listen": "prerequest",
					"script": {
						"exec": [
							"let sharedSecret = pm.variables.get(\"sharedSecret\");",
							"const nonce = _.random(0, 1000);",
							"const message = nonce + ':' + pm.request.body.raw;",
							"const hash = CryptoJS.HmacSHA256(message, sharedSecret).toString(CryptoJS.digest);",
							"pm.collectionVariables.set('X-Frontastic-Nonce', nonce);",
							"pm.collectionVariables.set('X-Frontastic-Hash', hash);"
						],
						"type": "text/javascript"
					}
				},
				{
					"listen": "test",
					"script": {
						"exec": [
							"pm.test(\"Status code is 200\", function () {",
							"    pm.response.to.have.status(200);",
							"});",
							"",
							"var Ajv = require('ajv'),",
							"ajv = new Ajv({logger: console}),",
							"schema = ",
							"{",
							"  \"required\": [",
							"    \"cart\",",
							"  ],",
							"  \"properties\": {",
							"    \"cart\": {",
							"      \"type\": \"object\",",
							"        \"required\": [",
							"            \"_type\",",
							"            \"cartId\"",
							"        ],",
							"        \"properties\":{",
							"            \"_type\": {",
							"                \"type\": \"string\"",
							"            },",
							"            \"cartId\": {",
							"                \"type\": \"string\"",
							"            }",
							"        }",
							"    }",
							"  }",
							"};",
							"",
							"pm.test('Schema is valid', function() {",
							"    pm.expect(ajv.validate(schema, pm.response.json())).to.be.true;",
							"});"
						],
						"type": "text/javascript"
					}
				}
			],
			"protocolProfileBehavior": {
				"disabledSystemHeaders": {
					"accept": true,
					"user-agent": true
				}
			},
			"request": {
				"method": "POST",
				"header": [
					{
						"key": "Cookie",
						"value": "XDEBUG_SESSION=PHPSTORM",
						"type": "text"
					},
					{
						"key": "Accept",
						"value": "application/json",
						"type": "text"
					},
					{
						"key": "X-Frontastic-Nonce",
						"value": "{{X-Frontastic-Nonce}}",
						"type": "text"
					},
					{
						"key": "X-Frontastic-Hash",
						"value": "{{X-Frontastic-Hash}}",
						"type": "text"
					}
				],
				"body": {
					"mode": "raw",
					"raw": "{\"account\":{\"email\":\"jim.4@frontastic.cloud\"},\"shipping\":{\"firstName\":\"jim\",\"lastName\":\"arvanitidis\",\"phone\":\"12345678\",\"streetName\":\"Some address 1-2\",\"postalCode\":\"12345\",\"city\":\"SomeCity\",\"country\":\"DE\"},\"billing\":{\"firstName\":\"jim\",\"lastName\":\"arvanitidis\",\"phone\":\"12345678\",\"streetName\":\"Some address 1-2\",\"postalCode\":\"12345\",\"city\":\"SomeCity\",\"country\":\"DE\"}}",
					"options": {
						"raw": {
							"language": "json"
						}
					}
				},
				"url": {
					"raw": "{{host}}/api/cart/cart/update?ownErrorHandler=1",
					"host": [
						"{{host}}"
					],
					"path": [
						"api",
						"cart",
						"cart",
						"update"
					],
					"query": [
						{
							"key": "ownErrorHandler",
							"value": "1"
						}
					]
				}
			},
			"response": []
		},
		{
			"name": "version(SystemController -> view)",
			"event": [
				{
					"listen": "prerequest",
					"script": {
						"exec": [
							"let sharedSecret = pm.variables.get(\"sharedSecret\");",
							"const nonce = _.random(0, 1000);",
							"const message = nonce + ':' + pm.request.body.raw;",
							"const hash = CryptoJS.HmacSHA256(message, sharedSecret).toString(CryptoJS.digest);",
							"pm.collectionVariables.set('X-Frontastic-Nonce', nonce);",
							"pm.collectionVariables.set('X-Frontastic-Hash', hash);"
						],
						"type": "text/javascript"
					}
				},
				{
					"listen": "test",
					"script": {
						"exec": [
							"pm.test(\"Status code is 200\", function () {",
							"    pm.response.to.have.status(200);",
							"});"
						],
						"type": "text/javascript"
					}
				}
			],
			"protocolProfileBehavior": {
				"disabledSystemHeaders": {
					"accept": true,
					"user-agent": true
				},
				"disableBodyPruning": true
			},
			"request": {
				"method": "GET",
				"header": [
					{
						"key": "Cookie",
						"value": "XDEBUG_SESSION=PHPSTORM",
						"type": "text"
					},
					{
						"key": "Accept",
						"value": "application/json",
						"type": "text"
					},
					{
						"key": "X-Frontastic-Nonce",
						"value": "{{X-Frontastic-Nonce}}",
						"type": "text"
					},
					{
						"key": "X-Frontastic-Hash",
						"value": "{{X-Frontastic-Hash}}",
						"type": "text"
					}
				],
				"body": {
					"mode": "raw",
					"raw": "",
					"options": {
						"raw": {
							"language": "json"
						}
					}
				},
				"url": {
					"raw": "{{host}}/api/version",
					"host": [
						"{{host}}"
					],
					"path": [
						"api",
						"version"
					]
				}
			},
			"response": []
		},
		{
			"name": "contentsGet (ContentController -> viewaction)",
			"event": [
				{
					"listen": "prerequest",
					"script": {
						"exec": [
							"let sharedSecret = pm.variables.get(\"sharedSecret\");",
							"const nonce = _.random(0, 1000);",
							"const message = nonce + ':' + pm.request.body.raw;",
							"const hash = CryptoJS.HmacSHA256(message, sharedSecret).toString(CryptoJS.digest);",
							"pm.collectionVariables.set('X-Frontastic-Nonce', nonce);",
							"pm.collectionVariables.set('X-Frontastic-Hash', hash);"
						],
						"type": "text/javascript"
					}
				},
				{
					"listen": "test",
					"script": {
						"exec": [
							""
						],
						"type": "text/javascript"
					}
				}
			],
			"protocolProfileBehavior": {
				"disableBodyPruning": true,
				"disabledSystemHeaders": {
					"accept": true,
					"user-agent": true
				}
			},
			"request": {
				"method": "GET",
				"header": [
					{
						"key": "Cookie",
						"value": "XDEBUG_SESSION=PHPSTORM",
						"type": "text"
					},
					{
						"key": "Accept",
						"value": "application/json",
						"type": "text"
					},
					{
						"key": "X-Frontastic-Nonce",
						"value": "{{X-Frontastic-Nonce}}",
						"type": "text"
					},
					{
						"key": "X-Frontastic-Hash",
						"value": "{{X-Frontastic-Hash}}",
						"type": "text"
					}
				],
				"body": {
					"mode": "raw",
					"raw": "",
					"options": {
						"raw": {
							"language": "json"
						}
					}
				},
				"url": {
					"raw": "{{host}}/1/p/1",
					"host": [
						"{{host}}"
					],
					"path": [
						"1",
						"p",
						"1"
					]
				}
			},
			"response": []
		},
		{
			"name": "CertificateGet (CertificateController -> getCertificateBasedir)",
			"event": [
				{
					"listen": "prerequest",
					"script": {
						"exec": [
							"let sharedSecret = pm.variables.get(\"sharedSecret\");",
							"const nonce = _.random(0, 1000);",
							"const message = nonce + ':' + pm.request.body.raw;",
							"const hash = CryptoJS.HmacSHA256(message, sharedSecret).toString(CryptoJS.digest);",
							"pm.collectionVariables.set('X-Frontastic-Nonce', nonce);",
							"pm.collectionVariables.set('X-Frontastic-Hash', hash);"
						],
						"type": "text/javascript"
					}
				},
				{
					"listen": "test",
					"script": {
						"exec": [
							""
						],
						"type": "text/javascript"
					}
				}
			],
			"protocolProfileBehavior": {
				"disabledSystemHeaders": {
					"accept": true,
					"user-agent": true
				}
			},
			"request": {
				"method": "PUT",
				"header": [
					{
						"key": "Cookie",
						"value": "XDEBUG_SESSION=PHPSTORM",
						"type": "text"
					},
					{
						"key": "Accept",
						"value": "application/json",
						"type": "text"
					},
					{
						"key": "X-Frontastic-Nonce",
						"value": "{{X-Frontastic-Nonce}}",
						"type": "text"
					},
					{
						"key": "X-Frontastic-Hash",
						"value": "{{X-Frontastic-Hash}}",
						"type": "text"
					},
					{
						"key": "X-Frontastic-Api-Token",
						"value": "6ee71d16-f4b8-4ca3-861d-d09f48536208",
						"type": "text"
					}
				],
				"body": {
					"mode": "raw",
					"raw": "",
					"options": {
						"raw": {
							"language": "json"
						}
					}
				},
				"url": {
					"raw": "http://demo.frontastic.io.local/api/certificate",
					"protocol": "http",
					"host": [
						"demo",
						"frontastic",
						"io",
						"local"
					],
					"path": [
						"api",
						"certificate"
					]
				}
			},
			"response": []
		}
	],
	"variable": [
		{
			"key": "X-Frontastic-Nonce",
			"value": ""
		},
		{
			"key": "X-Frontastic-Hash",
			"value": ""
		}
	]
}